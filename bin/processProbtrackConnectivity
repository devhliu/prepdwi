#!/bin/bash

execpath=`dirname $0`
execpath=`realpath $execpath`

#dependencies: fsl bedpostx
#precondition: 

function usage {
 echo "Writes output to dwi/<in_dwi_name>/bedpost.bedpostX/probtrack"
 echo "Usage $0 <in_bedpost_dir> <out_track_dir> <nprobseeds> <atlas_label_nii> <atlas_label_csv> <atlas_space> <ncpus> <out_connectivity_csv> <subjid/list>"

}


if [ "$#" -lt 6 ]
then
    usage
    exit 1
fi

output_dir=`pwd`
in_bedpost_root=$1
out_name=$2
nprobseeds=$3
atlas_label_nii=$4
atlas_label_csv=$5
atlas_space=$6
ncpus=$7
out_conn_csv=$8
shift 8

if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi

t1_img_type=t1/t1.brain.inorm.nii.gz

for subj in $subjids
do

    bedpost_dir=$in_bedpost_root/$subj
    if [ -n "$scratch_dir" ] #if running on compute cluster, use scratch dir
    then
       out_track_dir=$scratch_dir/$subj/$out_name
   else
   out_track_dir=$in_bedpost_root/$subj/$out_name
   fi
   mkdir -p $out_track_dir

  #import atlas_label_nii file  -> imports to labelgroup "imported"
     #or:  
   #existing label-group and nii filename
 
   atlas_label_name=${atlas_label_nii##*/}
   atlas_label_name=${atlas_label_name%%.nii*}

   mkdir -p $atlas_space/labels/t1/imported
   cp -v $atlas_label_nii $atlas_space/labels/t1/imported

    echo $execpath/propLabels_reg_bspline_f3d t1 $t1_img_type imported $atlas_space $subj
    $execpath/propLabels_reg_bspline_f3d t1 $t1_img_type imported $atlas_space $subj

   atlas_t1=$subj/labels/t1/imported_bspline_f3d_${atlas_space}/${atlas_label_name}.nii.gz


   mask_file=$bedpost_dir/nodif_brain_mask.nii.gz

   
   targets_all_txt=$out_track_dir/targets.txt
   mkdir -p $out_track_dir/targets
   rm -f $targets_all_txt


   for line in `cat $atlas_label_csv`
   do
       label=${line%,*}
       index=${line##*,}
      
       index_pad=`printf  %03d $index`
       extracted=$out_track_dir/targets/$index_pad.$label.nii.gz
       echo fslmaths $atlas_t1 -thr $index -uthr $index $extracted
       fslmaths $atlas_t1 -thr $index -uthr $index $extracted

       realpath $extracted >> $targets_all_txt

       #resample to dwi space  -- not needed??
       echo reg_resample -flo $extracted -res $extracted -ref $mask_file -NN 0
       reg_resample -flo $extracted -res $extracted -ref $mask_file -NN 0
    done


   run_file=$out_track_dir/probtrack.cmd
   rm -f $run_file

   labellist=""
   for line in `cat $atlas_label_csv`
   do
       label=${line%,*}
       index=${line##*,}
      
       if [ "$labellist" = "" ]
       then
        labellist=$label
       else 
         labellist="$labellist,$label"
       fi

       index_pad=`printf  %03d $index`
       extracted=$out_track_dir/targets/$index_pad.$label.nii.gz

       out_seed_track=$out_track_dir/$index_pad.$label
       mkdir -p $out_seed_track

       seed_txt=$out_seed_track/seeds.txt

       realpath $extracted > $seed_txt

   
     samples_base=$bedpost_dir/merged
     probtrack_opts="-l --onewaycondition -c 0.2 -S 2000 --steplength=0.5 -P $nprobseeds --fibthresh=0.01 --distthresh=0.0  --sampvox=0.0 --forcedir --opd"
   
     echo probtrackx2 --seed=$seed_txt --targetmasks=$targets_all_txt -m $mask_file -s $samples_base --dir=$out_seed_track  $probtrack_opts --os2t --s2tastext  >>  $run_file
 

   done  #seed

    parallel --progress -j $ncpus < $run_file


    #now, need to 1) average over rows for matrix_seeds_to_all_targets in each seed dir, then concatenate all together

    echo $labellist > $out_conn_csv

    out_matrix=$
    for line in `cat $atlas_label_csv`
    do
       label=${line%,*}
       index=${line##*,}
      
       index_pad=`printf  %03d $index`

       out_seed_track=$out_track_dir/$index_pad.$label

       #reduce all seeds to a single row by averaging
      octave --eval "dlmwrite('$out_seed_track/avg_seeds_to_all_targets.csv',mean(importdata('$out_seed_track/matrix_seeds_to_all_targets')./$nprobseeds,1))"
      
      cat $out_seed_track/avg_seeds_to_all_targets.csv >> $out_conn_csv
   done


##########################################################################################################
#This section reads all the FA files in the prepdwi directory and generates matrices for mean and max FA value for each connectivity.

   echo "Generating FA matrices"
   mkdir -p temp

   subject_dir=${subj%_*} #stripping the subject ID
   session_dir=${subj#*_} #stripping the session

   for FAs in $(ls ../prepdwi/$subject_dir/$session_dir/dwi/*FA.nii.gz) #Reads through all the FA images.
   do

   	front=${FAs##*-}  #stripping off the front part to get what type of FA image
   	FA=${front%%.*} #stripping off the file extension

   	#labellist=""
   	for line in `cat $atlas_label_csv`
  	do
       		label=${line%,*}
      		index=${line##*,}
      
       		index_pad=`printf  %03d $index`

		connect_nifty=$index_pad.$label
		mkdir -p temp/$connect_nifty  #Creadting folders for each connectivity

		for nifties in $(ls $out_track_dir/$connect_nifty/seeds_to*.gz)  #Going through all the nifty files generated for each connectivity
		do
			name=${nifties##*/}
			fslmaths $nifties -thr 500 temp/$connect_nifty/$name.nii.gz  #Threshoding with 500, this should be not hardcoded, Should edit later
			fslmaths $FAs -mas temp/$connect_nifty/$name.nii.gz temp/$connect_nifty/$name.nii.gz  #Masking with the FA image
			mean_FA=$(fslstats temp/$connect_nifty/$name.nii.gz -M)  #Gets the non zero FA mean 
			max_FA=$(fslstats temp/$connect_nifty/$name.nii.gz -R)   #Gets the maximum FA value and the min
			Max_FA=$(echo $max_FA | awk '{print $2}') #Gets the max value (second line is the MAx)
			octave --eval "dlmwrite('temp/$connect_nifty/mean_${FA}_to_all_targets.csv',$mean_FA,'-append', 'delimiter', '\t')" #Saving mean FA to a CSV file
			octave --eval "dlmwrite('temp/$connect_nifty/max_${FA}_to_all_targets.csv',$Max_FA,'-append', 'delimiter', '\t')" #Saving max FA to a CSV file
		
		done

	#Rotating the mean csv file and adding it to the matrix
	octave --eval "dlmwrite('temp/$connect_nifty/mean_${FA}_to_all_targets.csv', rot90(importdata('temp/$connect_nifty/mean_${FA}_to_all_targets.csv')),'delimiter', ',')"
	sleep .1	
	cat temp/$connect_nifty/mean_${FA}_to_all_targets.csv >> ../prepdwi/$subject_dir/$session_dir/dwi/mean_${FA}_to_all_targets.csv

	
	#Rotating the max csv file and adding it to the matrix
	octave --eval "dlmwrite('temp/$connect_nifty/max_${FA}_to_all_targets.csv', rot90(importdata('temp/$connect_nifty/max_${FA}_to_all_targets.csv')),'delimiter', ',')"
	sleep .1
	cat temp/$connect_nifty/max_${FA}_to_all_targets.csv >> ../prepdwi/$subject_dir/$session_dir/dwi/max_${FA}_to_all_targets.csv
	
    	done
	
	echo "FA matrix generations is complete"
   done

rm temp

# End of the FA matrix section
#######################################################################################################################



    if [ -n "$scratch_dir" ] #if running on compute cluster, use scratch dir
    then
        pushd $scratch_dir/$subj
        echo "backing up scratch folder to $in_bedpost_root/$subj/$out_name.tar"
        tar -cvf $in_bedpost_root/$subj/$out_name.tar $out_name
        popd
    fi
done
