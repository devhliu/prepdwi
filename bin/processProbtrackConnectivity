#!/bin/bash

execpath=`dirname $0`
execpath=`realpath $execpath`

#dependencies: fsl bedpostx
#precondition: 

function usage {
 echo "Writes output to dwi/<in_dwi_name>/bedpost.bedpostX/probtrack"
 echo "Usage $0 <in_bedpost_dir> <out_track_dir> <nprobseeds> <atlas_label_nii> <atlas_label_csv> <atlas_space> <ncpus> <subjid/list>"

}


if [ "$#" -lt 6 ]
then
    usage
    exit 1
fi

output_dir=`pwd`
in_bedpost_root=$1
out_name=$2
nprobseeds=$3
atlas_label_nii=$4
atlas_label_csv=$5
atlas_space=$6
ncpus=$7
shift 7

if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi

t1_img_type=t1/t1.brain.inorm.nii.gz

for subj in $subjids
do

    bedpost_dir=$in_bedpost_root/$subj
   out_track_dir=$in_bedpost_root/$subj/$out_name
   mkdir -p $out_track_dir

  #import atlas_label_nii file  -> imports to labelgroup "imported"
     #or:  
   #existing label-group and nii filename
 
   atlas_label_name=${atlas_label_nii##*/}
   atlas_label_name=${atlas_label_name%%.nii*}

   mkdir -p $atlas_space/labels/t1/imported
   cp -v $atlas_label_nii $atlas_space/labels/t1/imported

    echo $execpath/propLabels_reg_bspline_f3d t1 $t1_img_type imported $atlas_space $subj
    $execpath/propLabels_reg_bspline_f3d t1 $t1_img_type imported $atlas_space $subj

   atlas_t1=$subj/labels/t1/imported_bspline_f3d_${atlas_space}/${atlas_label_name}.nii.gz



   mask_file=$bedpost_dir/nodif_brain_mask.nii.gz

   for line in `cat $atlas_label_csv`
   do
       label=${line%,*}
       index=${line##*,}
      
       index_pad=`printf  %03d $index`
       extracted=$out_track_dir/targets/$index_pad.$label.nii.gz
       echo fslmaths $atlas_t1 -thr $index -uthr $index $extracted
       fslmaths $atlas_t1 -thr $index -uthr $index $extracted
       #resample to dwi space
       echo reg_resample -flo $extracted -res $extracted -ref $mask_file -NN 0
       reg_resample -flo $extracted -res $extracted -ref $mask_file -NN 0
    done


   run_file=$out_track_dir/probtrack.cmd
   rm -f $run_file

   targets_txt=$out_track_dir/targets.txt
   mkdir -p $out_track_dir/targets
   rm -f $targets_txt

   for line in `cat $atlas_label_csv`
   do
       label=${line%,*}
       index=${line##*,}
      
       index_pad=`printf  %03d $index`
       extracted=$out_track_dir/targets/$index_pad.$label.nii.gz

       out_seed_track=$out_track_dir/$index_pad.$label
      mkdir -p $out_seed_track

       seed_txt=$out_seed_track/seeds.txt
       targets_txt=$out_seed_track/targets.txt

       realpath $extracted > $seed_txt
       rm -f $targets_txt

       #track from this seed to all other targets
       for tline in `cat $atlas_label_csv`
       do
            if [ ! "$line" = "$tline" ]
            then
                
                tlabel=${tline%,*}
                tindex=${tline##*,}
      
               tindex_pad=`printf  %03d $tindex`
               extracted=$out_track_dir/targets/$tindex_pad.$tlabel.nii.gz

                #add to list
                echo adding $extracted to $targets_txt
                    realpath $extracted >> $targets_txt
                
            fi

       done #target 

    echo "about to run probtrackx"
       samples_base=$bedpost_dir/merged
    probtrack_opts="-l --onewaycondition -c 0.2 -S 2000 --steplength=0.5 -P $nprobseeds --fibthresh=0.01 --distthresh=0.0  --sampvox=0.0 --forcedir --opd"
   
#   echo probtrackx2 --seed=$seed_txt --stop=$targets_txt -m $mask_file -s $samples_base --dir=$out_seed_track  $probtrack_opts --omatrix1 
   echo probtrackx2 --seed=$seed_txt --targetmasks=$targets_txt -m $mask_file -s $samples_base --dir=$out_seed_track  $probtrack_opts --os2t --s2tastext  >>  $run_file
   probtrackx2 --seed=$seed_txt --targetmasks=$targets_txt -m $mask_file -s $samples_base --dir=$out_seed_track  $probtrack_opts 
 

   done  #seed

   parallel -j $ncpus echo {} :::: $run_file

done
